name: CI_win

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        compiler: [msvc]
        generator: ["Visual Studio 17 2022"]
        build_type: [Release, Debug]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Cpp
      uses: aminya/setup-cpp@v1
      with:
        compiler: ${{ matrix.compiler }}
        vcvarsall: ${{ contains(matrix.os, 'windows' )}}

        cmake: true
        ninja: true
        vcpkg: true
        ccache: true
        clangtidy: false

        cppcheck: false

        gcovr: false
        opencppcoverage: false

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the

    - name: Install dependencies on Windows
      if: runner.os == 'Windows'
      run: choco install ninja

    - name: Install Asio using vcpkg
      run: |
        vcpkg install asio
        vcpkg integrate install

    - name: Configure CMake
      run: cmake -S . -B build -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCLI_BuildTests=ON -DCLI_BuildExamples=ON -DCLI_UseBoostAsio=ON

    - name: Build
      run: cmake --build build --config ${{matrix.build_type}}

    - name: run tests
      working-directory: ./build
      run: ctest -C ${{matrix.build_type}}
